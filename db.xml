<?xml version="1.0"?>
<fpdoc-descriptions>
  <package name="fcl-db">
    <!--
  ====================================================================
    db
  ====================================================================
-->
    <module name="db">
      <short>Definitions of DataBase related Classes in FreePascal Component Library</short>
      <descr/>
      <!-- unresolved type reference Visibility: default -->
      <element name="Classes">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="Sysutils">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="Variants">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="dsMaxBufferCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="dsMaxStringSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="YesNoChars">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="SQLDelimiterCharacters">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- alias type Visibility: default -->
      <element name="LargeInt">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- pointer type Visibility: default -->
      <element name="PLargeInt">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- array type Visibility: default -->
      <element name="TStringFieldBuffer">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TDataSetState">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TDataSetState.dsInactive">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TDataSetState.dsBrowse">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TDataSetState.dsEdit">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TDataSetState.dsInsert">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TDataSetState.dsSetKey">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TDataSetState.dsCalcFields">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TDataSetState.dsFilter">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TDataSetState.dsNewValue">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TDataSetState.dsOldValue">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TDataSetState.dsCurValue">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TDataSetState.dsBlockRead">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TDataSetState.dsInternalCalc">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TDataSetState.dsOpening">
        <short/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TDataEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TDataEvent.deFieldChange">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TDataEvent.deRecordChange">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TDataEvent.deDataSetChange">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TDataEvent.deDataSetScroll">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TDataEvent.deLayoutChange">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TDataEvent.deUpdateRecord">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TDataEvent.deUpdateState">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TDataEvent.deCheckBrowseMode">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TDataEvent.dePropertyChange">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TDataEvent.deFieldListChange">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TDataEvent.deFocusControl">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TDataEvent.deParentScroll">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TDataEvent.deConnectChange">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TDataEvent.deReconcileError">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TDataEvent.deDisabledStateChange">
        <short/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TUpdateStatus">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TUpdateStatus.usUnmodified">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TUpdateStatus.usModified">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TUpdateStatus.usInserted">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TUpdateStatus.usDeleted">
        <short/>
      </element>
      <!-- set type Visibility: default -->
      <element name="TUpdateStatusSet">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TUpdateMode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TUpdateMode.upWhereAll">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TUpdateMode.upWhereChanged">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TUpdateMode.upWhereKeyOnly">
        <short/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TResolverResponse">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TResolverResponse.rrSkip">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TResolverResponse.rrAbort">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TResolverResponse.rrMerge">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TResolverResponse.rrApply">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TResolverResponse.rrIgnore">
        <short/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TProviderFlag">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TProviderFlag.pfInUpdate">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TProviderFlag.pfInWhere">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TProviderFlag.pfInKey">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TProviderFlag.pfHidden">
        <short/>
      </element>
      <!-- set type Visibility: default -->
      <element name="TProviderFlags">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TFieldDef">
        <short>
          <var>TFieldDef</var> - definition for a field in a DataSet</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TFieldDefs">
        <short>A collection of field definitions</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TField">
        <short>
          <var>TField </var>- a field or column in a database. This definition contains a lot of information, in contrast to the <var>TColumn</var> class which has very few properties</short>
        <descr>
          <p>This class defines a Field in a database, and contains several methods for expressing the data in different formats, such as <var>AsBoolean</var>, <var>AsDateTime</var>, <var>AsFloat</var>, <var>AsInteger</var> etc</p>
        </descr>
        <errors/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TFields">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TDataSet">
        <short>Base class for records-based data-access</short>
        <descr>TDataset is the base-class of the db-unit. It provides all basic funtionality to access data stored in records. The data in each record is organised in several fields.

TDataset has a buffer to cache a few records in memory, this buffer is used by TDatasource to create the ability to use data-aware components.

TDataset provides the basic functionality to access, store and browse through the records. Descendants add the functionality to load and save the data. Therefore one should almost always use one of TDataset descendants, and not TDataset directly.
</descr>
        <errors/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TDataBase">
        <short>
          <var>TDatabase</var> - a class for connecting a FreePascal application to an external Database engine</short>
        <descr>
          <p>
            <var>TDatabase</var> - a class for connecting a FreePascal application to an external Database engine</p>
          <p>The purpose of the class is to provide a connection to an external database engine, not to provide the database itself. This class provides generic methods 
for attachment to databases and querying their contents; the details of the actual connection are handled by database-specific components (such as SQLDb for SQL-based databases, or DBA for DBASE/FoxPro style databases).</p>
        </descr>
        <errors/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TDatasource">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TDatalink">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TDBTransaction">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="EDatabaseError">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="EUpdateError">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="EUpdateError.FContext">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="EUpdateError.FErrorCode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="EUpdateError.FOriginalException">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="EUpdateError.FPreviousError">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="EUpdateError.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="EUpdateError.Create.NativeError">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="EUpdateError.Create.Context">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="EUpdateError.Create.ErrCode">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="EUpdateError.Create.PrevError">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="EUpdateError.Create.E">
        <short/>
      </element>
      <!-- destructor Visibility: public -->
      <element name="EUpdateError.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="EUpdateError.Context">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="EUpdateError.ErrorCode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="EUpdateError.OriginalExcaption">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="EUpdateError.PreviousError">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- "class of" type Visibility: default -->
      <element name="TFieldClass">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TFieldType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftUnknown">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftString">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftSmallint">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftInteger">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftWord">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftBoolean">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftFloat">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftCurrency">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftBCD">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftDate">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftTime">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftDateTime">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftBytes">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftVarBytes">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftAutoInc">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftBlob">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftMemo">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftGraphic">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftFmtMemo">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftParadoxOle">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftDBaseOle">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftTypedBinary">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftCursor">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftFixedChar">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftWideString">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftLargeint">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftADT">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftArray">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftReference">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftDataSet">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftOraBlob">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftOraClob">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftVariant">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftInterface">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftIDispatch">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftGuid">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftTimeStamp">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftFMTBcd">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftFixedWideChar">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldType.ftWideMemo">
        <short/>
      </element>
      <!-- array type Visibility: default -->
      <element name="TFieldMap">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- "type" alias type Visibility: default -->
      <element name="TDateTimeAlias">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- pointer type Visibility: default -->
      <element name="PDateTimeRec">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- record type Visibility: default -->
      <element name="TDateTimeRec">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TDateTimeRec.Date">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TDateTimeRec.Time">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TDateTimeRec.DateTime">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TFieldAttribute">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldAttribute.faHiddenCol">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldAttribute.faReadonly">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldAttribute.faRequired">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldAttribute.faLink">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldAttribute.faUnNamed">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldAttribute.faFixed">
        <short/>
      </element>
      <!-- set type Visibility: default -->
      <element name="TFieldAttributes">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TNamedItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TNamedItem.FName">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TNamedItem.GetDisplayName">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TNamedItem.GetDisplayName.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TNamedItem.SetDisplayName">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TNamedItem.SetDisplayName.AValue">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TNamedItem.DisplayName">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TNamedItem.Name">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TDefCollection">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDefCollection.FDataset">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDefCollection.FUpdated">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDefCollection.SetItemName">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDefCollection.SetItemName.AItem">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TDefCollection.create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDefCollection.create.ADataset">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDefCollection.create.AOwner">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDefCollection.create.AClass">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TDefCollection.Find">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDefCollection.Find.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDefCollection.Find.AName">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDefCollection.GetItemNames">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDefCollection.GetItemNames.List">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TDefCollection.IndexOf">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDefCollection.IndexOf.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDefCollection.IndexOf.AName">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDefCollection.Dataset">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDefCollection.Updated">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TFieldDef.FDataType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TFieldDef.FFieldNo">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TFieldDef.FInternalCalcField">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TFieldDef.FPrecision">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TFieldDef.FRequired">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TFieldDef.FSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TFieldDef.FAttributes">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TFieldDef.GetFieldClass">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TFieldDef.GetFieldClass.Result">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TFieldDef.SetAttributes">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFieldDef.SetAttributes.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TFieldDef.SetDataType">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFieldDef.SetDataType.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TFieldDef.SetPrecision">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFieldDef.SetPrecision.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TFieldDef.SetSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFieldDef.SetSize.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TFieldDef.SetRequired">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFieldDef.SetRequired.AValue">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TFieldDef.create">
        <short>Creates a new instance of this collection item.</short>
        <descr>
          <var>Create</var> instantiates a new item in a <link id="TCollection"/>. It
is called by the <link id="TCollection.Add"/> function and should under
normal circumstances never be called directly.
called
</descr>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFieldDef.create.ACollection">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFieldDef.Create.AOwner">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFieldDef.Create.AName">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFieldDef.Create.ADataType">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFieldDef.Create.ASize">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFieldDef.Create.ARequired">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFieldDef.Create.AFieldNo">
        <short/>
      </element>
      <!-- destructor Visibility: public -->
      <element name="TFieldDef.Destroy">
        <short>Destroys this collection item.</short>
        <descr>
          <p>
            <var>Destroy</var> removes the item from the managing collection 
and Destroys the item instance. 
</p>
          <p>This is the only way to remove items from a collection;
</p>
        </descr>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TFieldDef.Assign">
        <short>Assign the contents of one class to another.</short>
        <descr>
          <p>
            <var>Assign</var> copies the contents of <var>Source</var> to
<var>Self</var>, if the classes of the destination and source classes are
compatible.
</p>
          <p>The <var>TPersistent</var> implementation of <var>Assign</var> does nothing
but calling the <link id="TPersistent.AssignTo">AssignTo</link> method of
source. This means that if the destination class does not know how to assign
the contents of the source class, the source class instance is asked to assign
itself to the destination class. This means that it is necessary to
implement only one of the two methods so that two classes can be assiged to
one another.
</p>
          <remark>
            <p>In general, a statement of the form
</p>
            <code>Destination:=Source;
</code>
            <p>(where <var>Destination</var> and <var>Source</var> are classes) does not 
achieve the same as a statement of the form
</p>
            <code>Destination.Assign(Source);
</code>
            <p>After the former statement, both <var>Source</var> and
<var>Destination</var> will point to the same object. The latter statemtent
will copy the <var>contents</var> of the <var>Source</var> class to the
<var>Destination</var> class.
</p>
          </remark>
        </descr>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFieldDef.Assign.APersistent">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TFieldDef.CreateField">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TFieldDef.CreateField.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFieldDef.CreateField.AOwner">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TFieldDef.FieldClass">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TFieldDef.FieldNo">
        <short>FieldNo - the index number of the field</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TFieldDef.InternalCalcField">
        <short>This is an internally calculated field (ie probably not in original database, but calculated during execution of the query)</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TFieldDef.Required">
        <short>This field is required, ie there must always be valid data in it</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TFieldDef.Attributes">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TFieldDef.DataType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TFieldDef.Precision">
        <short>The level of precision to be used in floating-point calculations</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TFieldDef.Size">
        <short>The size (in bytes) of the datafield</short>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TFieldDefs.FHiddenFields">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TFieldDefs.GetItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TFieldDefs.GetItem.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFieldDefs.GetItem.Index">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TFieldDefs.SetItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFieldDefs.SetItem.Index">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFieldDefs.SetItem.AValue">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TFieldDefs.Create">
        <short>Create a new instance of TFieldDefs</short>
        <descr>
          <var>Create</var> creates a new instance of <var>TOwnedCollection</var> and
stores the <var>AOwner</var> references. It will use the value returned in the <link id="TCollection.Owner"/> property of the collection. The
<var>ItemClass</var> class reference is passed on to the inherited
constructor, and will be used to create new instances in the <link id="TCollection.Insert">Insert</link> and <link id="TCollection.Add">Add</link> methods.
</descr>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFieldDefs.Create.ADataSet">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TFieldDefs.Add">
        <short>Add a new name definition to the list of field definitions</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFieldDefs.Add.AName">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFieldDefs.Add.ADataType">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFieldDefs.Add.ASize">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFieldDefs.Add.ARequired">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TFieldDefs.AddFieldDef">
        <short>Add a new field definition</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TFieldDefs.AddFieldDef.Result">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TFieldDefs.Assign">
        <short>Assigns one collection to another.</short>
        <descr>
          <p>
            <var>Assign</var> assigns the contents of one collection to another.
It does this by clearing the items list, and adding as much elements as
there are in the <var>Source</var> collection; it assigns to each created
element the contents of it's counterpart in the <var>Source</var> element.
</p>
          <p>Two collections cannot be assigned to each other if instances of the
<var>ItemClass</var> classes cannot be assigned to each other. 
</p>
        </descr>
        <errors>If the objects in the collections cannot be assigned to one another, then
an <var>EConvertError</var> is raised.
</errors>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFieldDefs.Assign.FieldDefs">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TFieldDefs.Update">
        <short>Handler called when an item in the collection has changed.</short>
        <descr>
          <p>
            <var>Update</var> is called in the following cases:
</p>
          <ol>
            <li>An item is added to or removed from the collection.</li>
            <li>An item is moved in the list, i.e. its <link id="TCollectionItem.Index"/>
property changes.</li>
            <li>An item's <link id="TCollectionItem.DisplayName"/> property
changes.</li>
          </ol>
          <p>Descendent classes can override this method to perform additional actions
when the collection changes. The <var>Item</var> parameter indicates the
item that was changed. This can be <var>Nil</var>
          </p>
        </descr>
        <errors/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TFieldDefs.HiddenFields">
        <short>Are there hidden fields, which are not allowed to be displayed to the user?</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TFieldDefs.Items">
        <short>Indexed array of items in the collection.</short>
        <descr>
          <p>
            <var>Items</var> provides indexed access to the items in the collection.
Since the array is zero-based, <var>Index</var> should be an integer 
between <var>0</var> and <var>Count-1</var>.
</p>
          <p>It is possible to set or retrieve an element in the array. When setting
an element of the array, the object that is assigned should be compatible
with the class of the objects in the collection, as given by the 
<link id="TCollection.ItemClass"/> property.
</p>
          <p>Adding an element to the array can be done with the <link id="TCollection.Add"/> method. The array can be cleared with the <link id="TCollection.Clear"/> method. Removing an element of the array should
be done by freeing that element.
</p>
        </descr>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFieldDefs.Items.Index">
        <short/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TFieldKind">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldKind.fkData">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldKind.fkCalculated">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldKind.fkLookup">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFieldKind.fkInternalCalc">
        <short/>
      </element>
      <!-- set type Visibility: default -->
      <element name="TFieldKinds">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure type Visibility: default -->
      <element name="TFieldNotifyEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFieldNotifyEvent.Sender">
        <short/>
      </element>
      <!-- procedure type Visibility: default -->
      <element name="TFieldGetTextEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFieldGetTextEvent.Sender">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFieldGetTextEvent.Text">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFieldGetTextEvent.DisplayText">
        <short/>
      </element>
      <!-- procedure type Visibility: default -->
      <element name="TFieldSetTextEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFieldSetTextEvent.Sender">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFieldSetTextEvent.Text">
        <short/>
      </element>
      <!-- pointer type Visibility: default -->
      <element name="TFieldRef">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- set type Visibility: default -->
      <element name="TFieldChars">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- pointer type Visibility: default -->
      <element name="PLookupListRec">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- record type Visibility: default -->
      <element name="TLookupListRec">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TLookupListRec.Key">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TLookupListRec.Value">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TLookupList">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TLookupList.FList">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TLookupList.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- destructor Visibility: public -->
      <element name="TLookupList.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TLookupList.Add">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TLookupList.Add.AKey">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TLookupList.Add.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TLookupList.Clear">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TLookupList.ValueOfKey">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TLookupList.ValueOfKey.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TLookupList.ValueOfKey.AKey">
        <short/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FAlignMent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FAttributeSet">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FCalculated">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FConstraintErrorMessage">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FCustomConstraint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FDataSet">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FDataType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FDefaultExpression">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FDisplayLabel">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FDisplayWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FFieldKind">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FFieldName">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FFieldNo">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FFields">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FHasConstraints">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FImportedConstraint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FIsIndexField">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FKeyFields">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FLookupCache">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FLookupDataSet">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FLookupKeyfields">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FLookupresultField">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FLookupList">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FOffset">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FOnChange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FOnGetText">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FOnSetText">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FOnValidate">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FOrigin">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FReadOnly">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FRequired">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FValidChars">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FValueBuffer">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FValidating">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FVisible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TField.FProviderFlags">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TField.GetIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TField.GetIndex.Result">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TField.SetAlignment">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.SetAlignment.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TField.SetIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.SetIndex.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TField.SetDataset">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.SetDataset.AValue">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TField.GetDisplayText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TField.GetDisplayText.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TField.GetEditText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TField.GetEditText.Result">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TField.SetEditText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.SetEditText.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TField.SetDisplayLabel">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.SetDisplayLabel.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TField.SetDisplayWidth">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.SetDisplayWidth.AValue">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TField.GetDisplayWidth">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TField.GetDisplayWidth.Result">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TField.SetReadOnly">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.SetReadOnly.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TField.SetVisible">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.SetVisible.AValue">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TField.IsDisplayStored">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TField.IsDisplayStored.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TField.GetLookupList">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TField.GetLookupList.Result">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TField.CalcLookupValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TField.AccessError">
        <short>Function for finding the nature of a database access error</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TField.AccessError.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.AccessError.TypeName">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TField.CheckInactive">
        <short>Check if the field is inactive</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TField.CheckTypeSize">
        <short>Check the allowable size for this type of field</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.CheckTypeSize.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TField.Change">
        <short>Procedure for changing the data in the field</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TField.DataChanged">
        <short>Procedure to deal with any change in the data</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TField.FreeBuffers">
        <short>Procedure to free the buffers used to hold the data</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TField.GetAsBoolean">
        <short>Series of flags to show how data are to be fetched: as Boolean, Currency, Large integer, DateTime, Floating etc</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TField.GetAsBoolean.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TField.GetAsCurrency">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TField.GetAsCurrency.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TField.GetAsLargeInt">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TField.GetAsLargeInt.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TField.GetAsDateTime">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TField.GetAsDateTime.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TField.GetAsFloat">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TField.GetAsFloat.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TField.GetAsLongint">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TField.GetAsLongint.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TField.GetAsInteger">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TField.GetAsInteger.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TField.GetAsVariant">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TField.GetAsVariant.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TField.GetOldValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TField.GetOldValue.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TField.GetAsString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TField.GetAsString.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TField.GetAsWideString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TField.GetAsWideString.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TField.GetCanModify">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TField.GetCanModify.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TField.GetClassDesc">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TField.GetClassDesc.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TField.GetDataSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TField.GetDataSize.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TField.GetDefaultWidth">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TField.GetDefaultWidth.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TField.GetDisplayName">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TField.GetDisplayName.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TField.GetCurValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TField.GetCurValue.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TField.GetNewValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TField.GetNewValue.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TField.GetIsNull">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TField.GetIsNull.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TField.GetParentComponent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TField.GetParentComponent.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TField.GetText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.GetText.AText">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.GetText.ADisplayText">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TField.HasParent">
        <short>True if this field has a parent class</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TField.HasParent.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TField.Notification">
        <short>Called by components that are freed and which received a FreeNotification.</short>
        <descr>
          <p>
            <var>Notification</var> is called whenever a child component is destroyed,
inserted or removed from the list of owned component. Components that
were requested to send a notification when they are freed 
((with <link id="TComponent.FreeNotification">FreeNotification</link>)
will also call <var>Notification</var> when they are freed.
</p>
          <p>The <var>AComponent</var> parameter specifies which component sends the
notification, and <var>Operation</var> specifies whether the component is
being inserted into or removed from the child component list, or whether it
is being destroyed.
</p>
          <p>Descendents of <var>TComponent</var> can use <link id="TComponent.FreeNotification">FreeNotification</link> to request
notification of the destruction of another object. By overriding the
<var>Notification</var> method, they can do special processing (typically,
set a reference to this component to <var>Nil</var>) 
when this component is destroyed. The <var>Notification</var> method is
called quite often in the streaming process, so speed should be a
consideration when overriding this method.
</p>
        </descr>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.Notification.AComponent">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.Notification.Operation">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TField.PropertyChanged">
        <short>The field's property has changed, and the layout of the display is affected</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.PropertyChanged.LayoutAffected">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TField.ReadState">
        <short>Read the state of the field</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.ReadState.Reader">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TField.SetAsBoolean">
        <short>Series of methods for storing the data in various formats: as Boolean, Currency, DateTime, Floating Point, Long Integer etc</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.SetAsBoolean.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TField.SetAsCurrency">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.SetAsCurrency.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TField.SetAsDateTime">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.SetAsDateTime.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TField.SetAsFloat">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.SetAsFloat.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TField.SetAsLongint">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.SetAsLongint.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TField.SetAsInteger">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.SetAsInteger.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TField.SetAsLargeint">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.SetAsLargeint.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TField.SetAsVariant">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.SetAsVariant.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TField.SetAsString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.SetAsString.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TField.SetAsWideString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.SetAsWideString.aValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TField.SetDataType">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.SetDataType.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TField.SetNewValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.SetNewValue.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TField.SetSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.SetSize.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TField.SetParentComponent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.SetParentComponent.AParent">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TField.SetText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.SetText.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TField.SetVarValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.SetVarValue.AValue">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TField.Create">
        <short>Creates a new instance of the component.</short>
        <descr>
          <var>Create</var> creates a new instance of a <var>TComponent</var> class.
If <var>AOwner</var> is not <var>Nil</var>, the new component attempts to 
insert itself in the list of owned components of the owner.
</descr>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.Create.AOwner">
        <short/>
      </element>
      <!-- destructor Visibility: public -->
      <element name="TField.Destroy">
        <short>Destroys the instance of the component.</short>
        <descr>
          <var>Destroy</var> sends a <var>opRemove</var> notification to all components 
in the free-notification list. After that, all owned components are
destroyed by calling <link id="TComponent.DestroyComponents">DestroyComponents</link> 
(and hence removed from the list of owned components). When this
is done, the component removes itself from its owner's child component list.
After that, the parent's destroy method is called.
</descr>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TField.Assign">
        <short>Assign the contents of one class to another.</short>
        <descr>
          <p>
            <var>Assign</var> copies the contents of <var>Source</var> to
<var>Self</var>, if the classes of the destination and source classes are
compatible.
</p>
          <p>The <var>TPersistent</var> implementation of <var>Assign</var> does nothing
but calling the <link id="TPersistent.AssignTo">AssignTo</link> method of
source. This means that if the destination class does not know how to assign
the contents of the source class, the source class instance is asked to assign
itself to the destination class. This means that it is necessary to
implement only one of the two methods so that two classes can be assiged to
one another.
</p>
          <remark>
            <p>In general, a statement of the form
</p>
            <code>Destination:=Source;
</code>
            <p>(where <var>Destination</var> and <var>Source</var> are classes) does not 
achieve the same as a statement of the form
</p>
            <code>Destination.Assign(Source);
</code>
            <p>After the former statement, both <var>Source</var> and
<var>Destination</var> will point to the same object. The latter statemtent
will copy the <var>contents</var> of the <var>Source</var> class to the
<var>Destination</var> class.
</p>
          </remark>
        </descr>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.Assign.Source">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TField.AssignValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.AssignValue.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TField.Clear">
        <short>Remove the contents of the field</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TField.FocusControl">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TField.GetData">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TField.GetData.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.GetData.Buffer">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.GetData.NativeFormat">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TField.IsBlob">
        <short>Returns True if the Field is a Binary Large OBject (BLOB)</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TField.IsBlob.Result">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TField.IsValidChar">
        <short>Returns True if the InputCharacter is a vaid character</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TField.IsValidChar.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.IsValidChar.InputChar">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TField.RefreshLookupList">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TField.SetData">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.SetData.Buffer">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.SetData.NativeFormat">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TField.SetFieldType">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.SetFieldType.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TField.Validate">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TField.Validate.Buffer">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TField.AsBoolean">
        <short>The data of the field expressed as a Boolean value</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TField.AsCurrency">
        <short>The data of the field expressed as a currency value</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TField.AsDateTime">
        <short>The data of the field expressed as a date-time value</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TField.AsFloat">
        <short>The data of the field expressed as a floating-point (double precision) numeric value</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TField.AsLongint">
        <short>The data of the field expressed as a long integer value</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TField.AsLargeInt">
        <short>The data of the field expressed as a large integer value</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TField.AsInteger">
        <short>The data of the field expressed as an integer value</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TField.AsString">
        <short>The data of the field expressed as a string value</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TField.AsWideString">
        <short>The data of the field expressed as a wide string value</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TField.AsVariant">
        <short>The data of the field expressed as a variant value</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TField.AttributeSet">
        <short>The set of attributes of this field expressed as a string</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TField.Calculated">
        <short>This is a calculated field, ie does not exist in the original databasae but has been calculated as part of the data query</short>
        <descr>
          <p>This is a calculated field, ie does not exist in the original databasae but has been calculated as part of the data query</p>
          <p>An example would be; Age - calculated using Date of birth from original database, and current date.</p>
        </descr>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TField.CanModify">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TField.CurValue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TField.DataSet">
        <short>The data set to which this field belongs</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TField.DataSize">
        <short>The size of the data from this field</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TField.DataType">
        <short>The type of data held in this field</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TField.DisplayName">
        <short>The name to be displayed when data from this field are shown (need not be the same as the field name)</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TField.DisplayText">
        <short>The text string to be displayed to identify the data from this field</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TField.FieldNo">
        <short>The sequence number of this field</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TField.IsIndexField">
        <short>True if this is an Index field</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TField.IsNull">
        <short>True if the contents of the field is NULL</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TField.NewValue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TField.Offset">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TField.Size">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TField.Text">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TField.ValidChars">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TField.Value">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TField.OldValue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TField.LookupList">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TField.AlignMent">
        <short>How text is to be aligned in this field (left or right justified, centered etc)</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TField.CustomConstraint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TField.ConstraintErrorMessage">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TField.DefaultExpression">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TField.DisplayLabel">
        <short>The label to be used when this field is displayed (may not be the same as the Field Name, which is sometimes not very elegant!)</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TField.DisplayWidth">
        <short>The width to be used when displaying data from this field</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TField.FieldKind">
        <short>The kind of field this is: original Data, Calculated,  a Lookup field, or Internally Calculated </short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TField.FieldName">
        <short>The name of this field (as a string)</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TField.HasConstraints">
        <short>Whether there are constraints associated with this field</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TField.Index">
        <short>The Index value for this field</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TField.ImportedConstraint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TField.LookupDataSet">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TField.LookupKeyFields">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TField.LookupResultField">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TField.KeyFields">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TField.LookupCache">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TField.Origin">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TField.ProviderFlags">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TField.ReadOnly">
        <short>True if the field can only be read, but data cannot be written</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TField.Required">
        <short>True if this field is Required, that is it must exist and contain valid data</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TField.Visible">
        <short>True if Data can be seen</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TField.OnChange">
        <short>Event handler for a change in the data</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TField.OnGetText">
        <short>Event handler for getting the text for the field</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TField.OnSetText">
        <short>Event handler for setting the text of the field</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TField.OnValidate">
        <short>Event handler for validating the field's contents</short>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TStringField">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TStringField.FFixedChar">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TStringField.FTransliterate">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TStringField.CheckTypeSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringField.CheckTypeSize.AValue">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TStringField.GetAsBoolean">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TStringField.GetAsBoolean.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TStringField.GetAsDateTime">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TStringField.GetAsDateTime.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TStringField.GetAsFloat">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TStringField.GetAsFloat.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TStringField.GetAsLongint">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TStringField.GetAsLongint.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TStringField.GetAsString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TStringField.GetAsString.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TStringField.GetAsVariant">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TStringField.GetAsVariant.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TStringField.GetDataSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TStringField.GetDataSize.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TStringField.GetDefaultWidth">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TStringField.GetDefaultWidth.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TStringField.GetText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringField.GetText.AText">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringField.GetText.ADisplayText">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TStringField.GetValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TStringField.GetValue.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringField.GetValue.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TStringField.SetAsBoolean">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringField.SetAsBoolean.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TStringField.SetAsDateTime">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringField.SetAsDateTime.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TStringField.SetAsFloat">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringField.SetAsFloat.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TStringField.SetAsLongint">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringField.SetAsLongint.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TStringField.SetAsString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringField.SetAsString.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TStringField.SetVarValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringField.SetVarValue.AValue">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TStringField.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringField.Create.AOwner">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TStringField.FixedChar">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TStringField.Transliterate">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TStringField.Value">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringField.Size">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TWideStringField">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TWideStringField.CheckTypeSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWideStringField.CheckTypeSize.aValue">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TWideStringField.GetValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWideStringField.GetValue.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWideStringField.GetValue.aValue">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TWideStringField.GetAsString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWideStringField.GetAsString.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TWideStringField.SetAsString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWideStringField.SetAsString.aValue">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TWideStringField.GetAsVariant">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWideStringField.GetAsVariant.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TWideStringField.SetVarValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWideStringField.SetVarValue.aValue">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TWideStringField.GetAsWideString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWideStringField.GetAsWideString.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TWideStringField.SetAsWideString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWideStringField.SetAsWideString.aValue">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TWideStringField.GetDataSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWideStringField.GetDataSize.Result">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TWideStringField.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWideStringField.Create.aOwner">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TWideStringField.Value">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TNumericField">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TNumericField.FDisplayFormat">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TNumericField.FEditFormat">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TNumericField.RangeError">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TNumericField.RangeError.AValue">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TNumericField.RangeError.Min">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TNumericField.RangeError.Max">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TNumericField.SetDisplayFormat">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TNumericField.SetDisplayFormat.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TNumericField.SetEditFormat">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TNumericField.SetEditFormat.AValue">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TNumericField.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TNumericField.Create.AOwner">
        <short/>
      </element>
      <!-- property Visibility: published -->
      <element name="TNumericField.DisplayFormat">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TNumericField.EditFormat">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TLongintField">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TLongintField.FMinValue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TLongintField.FMaxValue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TLongintField.FMinRange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TLongintField.FMAxRange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TLongintField.SetMinValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TLongintField.SetMinValue.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TLongintField.SetMaxValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TLongintField.SetMaxValue.AValue">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TLongintField.GetAsFloat">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TLongintField.GetAsFloat.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TLongintField.GetAsLongint">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TLongintField.GetAsLongint.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TLongintField.GetAsString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TLongintField.GetAsString.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TLongintField.GetAsVariant">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TLongintField.GetAsVariant.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TLongintField.GetDataSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TLongintField.GetDataSize.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TLongintField.GetText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TLongintField.GetText.AText">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TLongintField.GetText.ADisplayText">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TLongintField.GetValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TLongintField.GetValue.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TLongintField.GetValue.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TLongintField.SetAsFloat">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TLongintField.SetAsFloat.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TLongintField.SetAsLongint">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TLongintField.SetAsLongint.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TLongintField.SetAsString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TLongintField.SetAsString.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TLongintField.SetVarValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TLongintField.SetVarValue.AValue">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TLongintField.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TLongintField.Create.AOwner">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TLongintField.CheckRange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TLongintField.CheckRange.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TLongintField.CheckRange.AValue">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TLongintField.Value">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TLongintField.MaxValue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TLongintField.MinValue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- alias type Visibility: default -->
      <element name="TIntegerField">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TLargeintField">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TLargeintField.FMinValue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TLargeintField.FMaxValue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TLargeintField.FMinRange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TLargeintField.FMAxRange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TLargeintField.SetMinValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TLargeintField.SetMinValue.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TLargeintField.SetMaxValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TLargeintField.SetMaxValue.AValue">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TLargeintField.GetAsFloat">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TLargeintField.GetAsFloat.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TLargeintField.GetAsLongint">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TLargeintField.GetAsLongint.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TLargeintField.GetAsLargeint">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TLargeintField.GetAsLargeint.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TLargeintField.GetAsString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TLargeintField.GetAsString.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TLargeintField.GetAsVariant">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TLargeintField.GetAsVariant.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TLargeintField.GetDataSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TLargeintField.GetDataSize.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TLargeintField.GetText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TLargeintField.GetText.AText">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TLargeintField.GetText.ADisplayText">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TLargeintField.GetValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TLargeintField.GetValue.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TLargeintField.GetValue.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TLargeintField.SetAsFloat">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TLargeintField.SetAsFloat.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TLargeintField.SetAsLongint">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TLargeintField.SetAsLongint.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TLargeintField.SetAsLargeint">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TLargeintField.SetAsLargeint.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TLargeintField.SetAsString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TLargeintField.SetAsString.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TLargeintField.SetVarValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TLargeintField.SetVarValue.AValue">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TLargeintField.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TLargeintField.Create.AOwner">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TLargeintField.CheckRange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TLargeintField.CheckRange.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TLargeintField.CheckRange.AValue">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TLargeintField.Value">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TLargeintField.MaxValue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TLargeintField.MinValue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TSmallintField">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TSmallintField.GetDataSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TSmallintField.GetDataSize.Result">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TSmallintField.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TSmallintField.Create.AOwner">
        <short/>
      </element>
      <!-- object Visibility: default -->
      <element name="TWordField">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TWordField.GetDataSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWordField.GetDataSize.Result">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TWordField.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWordField.Create.AOwner">
        <short/>
      </element>
      <!-- object Visibility: default -->
      <element name="TAutoIncField">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TAutoIncField.SetAsLongInt">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TAutoIncField.SetAsLongInt.AValue">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TAutoIncField.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TAutoIncField.Create.AOwner">
        <short/>
      </element>
      <!-- object Visibility: default -->
      <element name="TFloatField">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TFloatField.FCurrency">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TFloatField.FMaxValue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TFloatField.FMinValue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TFloatField.FPrecision">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TFloatField.SetCurrency">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFloatField.SetCurrency.AValue">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TFloatField.GetAsFloat">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TFloatField.GetAsFloat.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TFloatField.GetAsLongint">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TFloatField.GetAsLongint.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TFloatField.GetAsVariant">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TFloatField.GetAsVariant.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TFloatField.GetAsString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TFloatField.GetAsString.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TFloatField.GetDataSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TFloatField.GetDataSize.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TFloatField.GetText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFloatField.GetText.theText">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFloatField.GetText.ADisplayText">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TFloatField.SetAsFloat">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFloatField.SetAsFloat.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TFloatField.SetAsLongint">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFloatField.SetAsLongint.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TFloatField.SetAsString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFloatField.SetAsString.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TFloatField.SetVarValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFloatField.SetVarValue.AValue">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TFloatField.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFloatField.Create.AOwner">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TFloatField.CheckRange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TFloatField.CheckRange.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFloatField.CheckRange.AValue">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TFloatField.Value">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TFloatField.Currency">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TFloatField.MaxValue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TFloatField.MinValue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TFloatField.Precision">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TCurrencyField">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TCurrencyField.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCurrencyField.Create.AOwner">
        <short/>
      </element>
      <!-- property Visibility: published -->
      <element name="TCurrencyField.Currency">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TBooleanField">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TBooleanField.FDisplayValues">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TBooleanField.FDisplays">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TBooleanField.SetDisplayValues">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBooleanField.SetDisplayValues.AValue">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TBooleanField.GetAsBoolean">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TBooleanField.GetAsBoolean.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TBooleanField.GetAsString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TBooleanField.GetAsString.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TBooleanField.GetAsVariant">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TBooleanField.GetAsVariant.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TBooleanField.GetDataSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TBooleanField.GetDataSize.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TBooleanField.GetDefaultWidth">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TBooleanField.GetDefaultWidth.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TBooleanField.SetAsBoolean">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBooleanField.SetAsBoolean.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TBooleanField.SetAsString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBooleanField.SetAsString.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TBooleanField.SetVarValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBooleanField.SetVarValue.AValue">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TBooleanField.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBooleanField.Create.AOwner">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TBooleanField.Value">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBooleanField.DisplayValues">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TDateTimeField">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDateTimeField.FDisplayFormat">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TDateTimeField.SetDisplayFormat">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDateTimeField.SetDisplayFormat.AValue">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDateTimeField.GetAsDateTime">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDateTimeField.GetAsDateTime.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDateTimeField.GetAsFloat">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDateTimeField.GetAsFloat.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDateTimeField.GetAsString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDateTimeField.GetAsString.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDateTimeField.GetAsVariant">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDateTimeField.GetAsVariant.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDateTimeField.GetDataSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDateTimeField.GetDataSize.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDateTimeField.GetText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDateTimeField.GetText.theText">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDateTimeField.GetText.ADisplayText">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDateTimeField.SetAsDateTime">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDateTimeField.SetAsDateTime.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDateTimeField.SetAsFloat">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDateTimeField.SetAsFloat.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDateTimeField.SetAsString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDateTimeField.SetAsString.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDateTimeField.SetVarValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDateTimeField.SetVarValue.AValue">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TDateTimeField.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDateTimeField.Create.AOwner">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDateTimeField.Value">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDateTimeField.DisplayFormat">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TDateField">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TDateField.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDateField.Create.AOwner">
        <short/>
      </element>
      <!-- object Visibility: default -->
      <element name="TTimeField">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TTimeField.SetAsString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTimeField.SetAsString.AValue">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TTimeField.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTimeField.Create.AOwner">
        <short/>
      </element>
      <!-- object Visibility: default -->
      <element name="TBinaryField">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TBinaryField.CheckTypeSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBinaryField.CheckTypeSize.AValue">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TBinaryField.GetAsString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TBinaryField.GetAsString.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TBinaryField.GetText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBinaryField.GetText.TheText">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBinaryField.GetText.ADisplayText">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TBinaryField.SetAsString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBinaryField.SetAsString.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TBinaryField.SetText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBinaryField.SetText.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TBinaryField.SetVarValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBinaryField.SetVarValue.AValue">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TBinaryField.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBinaryField.Create.AOwner">
        <short/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBinaryField.Size">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TBytesField">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TBytesField.GetDataSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TBytesField.GetDataSize.Result">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TBytesField.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBytesField.Create.AOwner">
        <short/>
      </element>
      <!-- object Visibility: default -->
      <element name="TVarBytesField">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TVarBytesField.GetDataSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TVarBytesField.GetDataSize.Result">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TVarBytesField.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVarBytesField.Create.AOwner">
        <short/>
      </element>
      <!-- object Visibility: default -->
      <element name="TBCDField">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TBCDField.FMinValue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TBCDField.FMaxValue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TBCDField.FPrecision">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TBCDField.FCurrency">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TBCDField.CheckTypeSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBCDField.CheckTypeSize.AValue">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TBCDField.GetAsCurrency">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TBCDField.GetAsCurrency.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TBCDField.GetAsFloat">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TBCDField.GetAsFloat.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TBCDField.GetAsLongint">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TBCDField.GetAsLongint.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TBCDField.GetAsString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TBCDField.GetAsString.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TBCDField.GetValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TBCDField.GetValue.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBCDField.GetValue.AValue">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TBCDField.GetAsVariant">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TBCDField.GetAsVariant.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TBCDField.GetDataSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TBCDField.GetDataSize.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TBCDField.GetDefaultWidth">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TBCDField.GetDefaultWidth.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TBCDField.GetText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBCDField.GetText.TheText">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBCDField.GetText.ADisplayText">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TBCDField.SetAsFloat">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBCDField.SetAsFloat.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TBCDField.SetAsLongint">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBCDField.SetAsLongint.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TBCDField.SetAsString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBCDField.SetAsString.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TBCDField.SetAsCurrency">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBCDField.SetAsCurrency.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TBCDField.SetVarValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBCDField.SetVarValue.AValue">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TBCDField.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBCDField.Create.AOwner">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TBCDField.CheckRange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TBCDField.CheckRange.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBCDField.CheckRange.AValue">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TBCDField.Value">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBCDField.Precision">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBCDField.Currency">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBCDField.MaxValue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBCDField.MinValue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBCDField.Size">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TBlobStreamMode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TBlobStreamMode.bmRead">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TBlobStreamMode.bmWrite">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TBlobStreamMode.bmReadWrite">
        <short/>
      </element>
      <!-- range type Visibility: default -->
      <element name="TBlobType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TBlobField">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TBlobField.FBlobSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TBlobField.FBlobType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TBlobField.FModified">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TBlobField.FTransliterate">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TBlobField.GetBlobStream">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TBlobField.GetBlobStream.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBlobField.GetBlobStream.Mode">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TBlobField.AssignTo">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBlobField.AssignTo.Dest">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TBlobField.FreeBuffers">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TBlobField.GetAsString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TBlobField.GetAsString.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TBlobField.GetAsVariant">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TBlobField.GetAsVariant.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TBlobField.GetBlobSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TBlobField.GetBlobSize.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TBlobField.GetIsNull">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TBlobField.GetIsNull.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TBlobField.GetText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBlobField.GetText.TheText">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBlobField.GetText.ADisplayText">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TBlobField.SetAsString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBlobField.SetAsString.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TBlobField.SetText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBlobField.SetText.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TBlobField.SetVarValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBlobField.SetVarValue.AValue">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TBlobField.GetAsWideString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TBlobField.GetAsWideString.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TBlobField.SetAsWideString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBlobField.SetAsWideString.aValue">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TBlobField.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBlobField.Create.AOwner">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TBlobField.Assign">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBlobField.Assign.Source">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TBlobField.Clear">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TBlobField.IsBlob">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TBlobField.IsBlob.Result">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TBlobField.LoadFromFile">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBlobField.LoadFromFile.FileName">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TBlobField.LoadFromStream">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBlobField.LoadFromStream.Stream">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TBlobField.SaveToFile">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBlobField.SaveToFile.FileName">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TBlobField.SaveToStream">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBlobField.SaveToStream.Stream">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TBlobField.SetFieldType">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TBlobField.SetFieldType.AValue">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TBlobField.BlobSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TBlobField.Modified">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TBlobField.Value">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TBlobField.Transliterate">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBlobField.BlobType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TBlobField.Size">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TMemoField">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TMemoField.GetAsWideString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMemoField.GetAsWideString.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TMemoField.SetAsWideString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMemoField.SetAsWideString.aValue">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TMemoField.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMemoField.Create.AOwner">
        <short/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMemoField.Transliterate">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TWideMemoField">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TWideMemoField.GetAsVariant">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWideMemoField.GetAsVariant.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TWideMemoField.SetVarValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWideMemoField.SetVarValue.AValue">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TWideMemoField.GetAsString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWideMemoField.GetAsString.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TWideMemoField.SetAsString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWideMemoField.SetAsString.aValue">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TWideMemoField.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWideMemoField.Create.aOwner">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TWideMemoField.Value">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TGraphicField">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TGraphicField.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGraphicField.Create.AOwner">
        <short/>
      </element>
      <!-- object Visibility: default -->
      <element name="TVariantField">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TVariantField.CheckTypeSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVariantField.CheckTypeSize.aValue">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TVariantField.GetAsBoolean">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TVariantField.GetAsBoolean.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TVariantField.SetAsBoolean">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVariantField.SetAsBoolean.aValue">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TVariantField.GetAsDateTime">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TVariantField.GetAsDateTime.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TVariantField.SetAsDateTime">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVariantField.SetAsDateTime.aValue">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TVariantField.GetAsFloat">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TVariantField.GetAsFloat.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TVariantField.SetAsFloat">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVariantField.SetAsFloat.aValue">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TVariantField.GetAsInteger">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TVariantField.GetAsInteger.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TVariantField.SetAsInteger">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVariantField.SetAsInteger.aValue">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TVariantField.GetAsString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TVariantField.GetAsString.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TVariantField.SetAsString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVariantField.SetAsString.aValue">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TVariantField.GetAsWideString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TVariantField.GetAsWideString.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TVariantField.SetAsWideString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVariantField.SetAsWideString.aValue">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TVariantField.GetAsVariant">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TVariantField.GetAsVariant.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TVariantField.SetVarValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVariantField.SetVarValue.aValue">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TVariantField.GetDefaultWidth">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TVariantField.GetDefaultWidth.Result">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TVariantField.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVariantField.Create.AOwner">
        <short/>
      </element>
      <!-- object Visibility: default -->
      <element name="TGuidField">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TGuidField.CheckTypeSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGuidField.CheckTypeSize.AValue">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TGuidField.GetDefaultWidth">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGuidField.GetDefaultWidth.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TGuidField.GetAsGuid">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGuidField.GetAsGuid.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TGuidField.SetAsGuid">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGuidField.SetAsGuid.aValue">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TGuidField.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGuidField.Create.AOwner">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TGuidField.AsGuid">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TIndexDefs">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TIndexOption">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TIndexOption.ixPrimary">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TIndexOption.ixUnique">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TIndexOption.ixDescending">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TIndexOption.ixCaseInsensitive">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TIndexOption.ixExpression">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TIndexOption.ixNonMaintained">
        <short/>
      </element>
      <!-- set type Visibility: default -->
      <element name="TIndexOptions">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TIndexDef">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TIndexDef.FCaseinsFields">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TIndexDef.FDescFields">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TIndexDef.FExpression">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TIndexDef.FFields">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TIndexDef.FOptions">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TIndexDef.FSource">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TIndexDef.Assign">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TIndexDef.Assign.Source">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TIndexDef.GetExpression">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TIndexDef.GetExpression.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TIndexDef.SetCaseInsFields">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TIndexDef.SetCaseInsFields.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TIndexDef.SetDescFields">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TIndexDef.SetDescFields.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TIndexDef.SetExpression">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TIndexDef.SetExpression.AValue">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TIndexDef.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TIndexDef.Create.Owner">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TIndexDef.Create.AName">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TIndexDef.Create.TheFields">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TIndexDef.Create.TheOptions">
        <short/>
      </element>
      <!-- destructor Visibility: public -->
      <element name="TIndexDef.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TIndexDef.Expression">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TIndexDef.Fields">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TIndexDef.CaseInsFields">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TIndexDef.DescFields">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TIndexDef.Options">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TIndexDef.Source">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TIndexDefs.GetItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TIndexDefs.GetItem.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TIndexDefs.GetItem.Index">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TIndexDefs.SetItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TIndexDefs.SetItem.Index">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TIndexDefs.SetItem.Value">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TIndexDefs.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TIndexDefs.Create.ADataSet">
        <short/>
      </element>
      <!-- destructor Visibility: public -->
      <element name="TIndexDefs.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TIndexDefs.Add">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TIndexDefs.Add.Name">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TIndexDefs.Add.Fields">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TIndexDefs.Add.Options">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TIndexDefs.AddIndexDef">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TIndexDefs.AddIndexDef.Result">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TIndexDefs.Find">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TIndexDefs.Find.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TIndexDefs.Find.IndexName">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TIndexDefs.FindIndexForFields">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TIndexDefs.FindIndexForFields.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TIndexDefs.FindIndexForFields.Fields">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TIndexDefs.GetIndexForFields">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TIndexDefs.GetIndexForFields.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TIndexDefs.GetIndexForFields.Fields">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TIndexDefs.GetIndexForFields.CaseInsensitive">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TIndexDefs.Update">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TIndexDefs.Items">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TIndexDefs.Items.Index">
        <short/>
      </element>
      <!-- object Visibility: default -->
      <element name="TCheckConstraint">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCheckConstraint.FCustomConstraint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCheckConstraint.FErrorMessage">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCheckConstraint.FFromDictionary">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCheckConstraint.FImportedConstraint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCheckConstraint.Assign">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCheckConstraint.Assign.Source">
        <short/>
      </element>
      <!-- property Visibility: published -->
      <element name="TCheckConstraint.CustomConstraint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TCheckConstraint.ErrorMessage">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TCheckConstraint.FromDictionary">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TCheckConstraint.ImportedConstraint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TCheckConstraints">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCheckConstraints.GetItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCheckConstraints.GetItem.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCheckConstraints.GetItem.Index">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCheckConstraints.SetItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCheckConstraints.SetItem.index">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCheckConstraints.SetItem.Value">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCheckConstraints.GetOwner">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCheckConstraints.GetOwner.Result">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TCheckConstraints.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCheckConstraints.Create.AOwner">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TCheckConstraints.Add">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCheckConstraints.Add.Result">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCheckConstraints.Items">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCheckConstraints.Items.Index">
        <short/>
      </element>
      <!-- variable Visibility: private -->
      <element name="Tfields.FDataset">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="Tfields.FFieldList">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="Tfields.FOnChange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="Tfields.FValidFieldKinds">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="Tfields.Changed">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="Tfields.CheckfieldKind">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="Tfields.CheckfieldKind.Fieldkind">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="Tfields.CheckfieldKind.Field">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="Tfields.GetCount">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="Tfields.GetCount.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="Tfields.GetField">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="Tfields.GetField.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="Tfields.GetField.Index">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="Tfields.SetField">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="Tfields.SetField.Index">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="Tfields.SetField.Value">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="Tfields.SetFieldIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="Tfields.SetFieldIndex.Field">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="Tfields.SetFieldIndex.Value">
        <short/>
      </element>
      <!-- property Visibility: protected -->
      <element name="Tfields.OnChange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="Tfields.ValidFieldKinds">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="Tfields.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="Tfields.Create.ADataset">
        <short/>
      </element>
      <!-- destructor Visibility: public -->
      <element name="Tfields.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="Tfields.Add">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="Tfields.Add.Field">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="Tfields.CheckFieldName">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="Tfields.CheckFieldName.Value">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="Tfields.CheckFieldNames">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="Tfields.CheckFieldNames.Value">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="Tfields.Clear">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="Tfields.FindField">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="Tfields.FindField.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="Tfields.FindField.Value">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="Tfields.FieldByName">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="Tfields.FieldByName.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="Tfields.FieldByName.Value">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="Tfields.FieldByNumber">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="Tfields.FieldByNumber.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="Tfields.FieldByNumber.FieldNo">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="Tfields.GetFieldNames">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="Tfields.GetFieldNames.Values">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="Tfields.IndexOf">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="Tfields.IndexOf.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="Tfields.IndexOf.Field">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="Tfields.Remove">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="Tfields.Remove.Value">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="Tfields.Count">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="Tfields.Dataset">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="Tfields.Fields">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="Tfields.Fields.Index">
        <short/>
      </element>
      <!-- alias type Visibility: default -->
      <element name="TBookmark">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- alias type Visibility: default -->
      <element name="TBookmarkStr">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- pointer type Visibility: default -->
      <element name="PBookmarkFlag">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TBookmarkFlag">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TBookmarkFlag.bfCurrent">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TBookmarkFlag.bfBOF">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TBookmarkFlag.bfEOF">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TBookmarkFlag.bfInserted">
        <short/>
      </element>
      <!-- pointer type Visibility: default -->
      <element name="PBufferList">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- array type Visibility: default -->
      <element name="TBufferList">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TGetMode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGetMode.gmCurrent">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGetMode.gmNext">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGetMode.gmPrior">
        <short/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TGetResult">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGetResult.grOK">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGetResult.grBOF">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGetResult.grEOF">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGetResult.grError">
        <short/>
      </element>
      <!-- set type Visibility: default -->
      <element name="TResyncMode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TResyncMode.rmExact">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TResyncMode.rmCenter">
        <short/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TDataAction">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TDataAction.daFail">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TDataAction.daAbort">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TDataAction.daRetry">
        <short/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TUpdateAction">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TUpdateAction.uaFail">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TUpdateAction.uaAbort">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TUpdateAction.uaSkip">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TUpdateAction.uaRetry">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TUpdateAction.uaApplied">
        <short/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TUpdateKind">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TUpdateKind.ukModify">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TUpdateKind.ukInsert">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TUpdateKind.ukDelete">
        <short/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TLocateOption">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TLocateOption.loCaseInsensitive">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TLocateOption.loPartialKey">
        <short/>
      </element>
      <!-- set type Visibility: default -->
      <element name="TLocateOptions">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure type Visibility: default -->
      <element name="TDataOperation">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure type Visibility: default -->
      <element name="TDataSetNotifyEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSetNotifyEvent.DataSet">
        <short/>
      </element>
      <!-- procedure type Visibility: default -->
      <element name="TDataSetErrorEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSetErrorEvent.DataSet">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSetErrorEvent.E">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSetErrorEvent.DataAction">
        <short/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TFilterOption">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFilterOption.foCaseInsensitive">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFilterOption.foNoPartialCompare">
        <short/>
      </element>
      <!-- set type Visibility: default -->
      <element name="TFilterOptions">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure type Visibility: default -->
      <element name="TFilterRecordEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFilterRecordEvent.DataSet">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFilterRecordEvent.Accept">
        <short/>
      </element>
      <!-- "class of" type Visibility: default -->
      <element name="TDatasetClass">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- pointer type Visibility: default -->
      <element name="TBufferArray">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FOpenAfterRead">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FActiveRecord">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FAfterCancel">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FAfterClose">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FAfterDelete">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FAfterEdit">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FAfterInsert">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FAfterOpen">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FAfterPost">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FAfterRefresh">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FAfterScroll">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FAutoCalcFields">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FBOF">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FBeforeCancel">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FBeforeClose">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FBeforeDelete">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FBeforeEdit">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FBeforeInsert">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FBeforeOpen">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FBeforePost">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FBeforeRefresh">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FBeforeScroll">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FBlobFieldCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FBookmarkSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FBuffers">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FBufferCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FCalcBuffer">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FCalcFieldsSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FConstraints">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FDisableControlsCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FDisableControlsState">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FCurrentRecord">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FDataSources">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FDefaultFields">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FEOF">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FEnableControlsEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FFieldList">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FFieldDefs">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FFilterOptions">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FFilterText">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FFiltered">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FFound">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FInternalCalcFields">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FModified">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FOnCalcFields">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FOnDeleteError">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FOnEditError">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FOnFilterRecord">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FOnNewRecord">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FOnPostError">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FRecordCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FIsUniDirectional">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FState">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSet.FInternalOpenComplete">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TDataSet.DoInsertAppend">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.DoInsertAppend.DoAppend">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TDataSet.DoInternalOpen">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TDataSet.GetBuffer">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.GetBuffer.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.GetBuffer.Index">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TDataSet.GetField">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.GetField.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.GetField.Index">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TDataSet.RegisterDataSource">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.RegisterDataSource.ADatasource">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TDataSet.RemoveField">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.RemoveField.Field">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TDataSet.SetField">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.SetField.Index">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.SetField.Value">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TDataSet.ShiftBuffersForward">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TDataSet.ShiftBuffersBackward">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TDataSet.TryDoing">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.TryDoing.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.TryDoing.P">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.TryDoing.Ev">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TDataSet.GetActive">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.GetActive.Result">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TDataSet.UnRegisterDataSource">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.UnRegisterDataSource.ADatasource">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TDataSet.UpdateFieldDefs">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.RecalcBufListSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.ActivateBuffers">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.BindFields">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.BindFields.Binding">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDataSet.BookmarkAvailable">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.BookmarkAvailable.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.CalculateFields">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.CalculateFields.Buffer">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.CheckActive">
        <short>Raises an EDatabaseException if the dataset is not active</short>
        <descr>Raises an EDatabaseException if the dataset is not active
</descr>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.CheckInactive">
        <short>Raises an EDatabaseException if the dataset is active</short>
        <descr>Raises an EDatabaseException if the dataset is active</descr>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.CheckBiDirectional">
        <short>Raises an EDatabaseException if the dataset is not BiDirectional</short>
        <descr>Raises an EDatabaseException if the dataset is not BiDirectional</descr>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.Loaded">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.ClearBuffers">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.ClearCalcFields">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.ClearCalcFields.Buffer">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.CloseBlob">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.CloseBlob.Field">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.CloseCursor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.CreateFields">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.DataEvent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.DataEvent.Event">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.DataEvent.Info">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.DestroyFields">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.DoAfterCancel">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.DoAfterClose">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.DoAfterDelete">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.DoAfterEdit">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.DoAfterInsert">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.DoAfterOpen">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.DoAfterPost">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.DoAfterScroll">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.DoAfterRefresh">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.DoBeforeCancel">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.DoBeforeClose">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.DoBeforeDelete">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.DoBeforeEdit">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.DoBeforeInsert">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.DoBeforeOpen">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.DoBeforePost">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.DoBeforeScroll">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.DoBeforeRefresh">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.DoOnCalcFields">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.DoOnNewRecord">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDataSet.FieldByNumber">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.FieldByNumber.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.FieldByNumber.FieldNo">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDataSet.FindRecord">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.FindRecord.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.FindRecord.Restart">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.FindRecord.GoForward">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.FreeFieldBuffers">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDataSet.GetBookmarkStr">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.GetBookmarkStr.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.GetCalcFields">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.GetCalcFields.Buffer">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDataSet.GetCanModify">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.GetCanModify.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.GetChildren">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.GetChildren.Proc">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.GetChildren.Root">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDataSet.GetFieldClass">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.GetFieldClass.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.GetFieldClass.FieldType">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDataSet.GetfieldCount">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.GetfieldCount.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDataSet.GetFieldValues">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.GetFieldValues.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.GetFieldValues.fieldname">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDataSet.GetIsIndexField">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.GetIsIndexField.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.GetIsIndexField.Field">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDataSet.GetIndexDefs">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.GetIndexDefs.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.GetIndexDefs.IndexDefs">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.GetIndexDefs.IndexTypes">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDataSet.GetNextRecords">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.GetNextRecords.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDataSet.GetNextRecord">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.GetNextRecord.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDataSet.GetPriorRecords">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.GetPriorRecords.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDataSet.GetPriorRecord">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.GetPriorRecord.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDataSet.GetRecordCount">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.GetRecordCount.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDataSet.GetRecNo">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.GetRecNo.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.InitFieldDefs">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.InitFieldDefsFromfields">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.InitRecord">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.InitRecord.Buffer">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.InternalCancel">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.InternalEdit">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.InternalInsert">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.InternalRefresh">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.OpenCursor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.OpenCursor.InfoQuery">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.OpenCursorcomplete">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.RefreshInternalCalcFields">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.RefreshInternalCalcFields.Buffer">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.RestoreState">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.RestoreState.Value">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.SetActive">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.SetActive.Value">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.SetBookmarkStr">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.SetBookmarkStr.Value">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.SetBufListSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.SetBufListSize.Value">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.SetChildOrder">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.SetChildOrder.Component">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.SetChildOrder.Order">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.SetCurrentRecord">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.SetCurrentRecord.Index">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.SetFiltered">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.SetFiltered.Value">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.SetFilterOptions">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.SetFilterOptions.Value">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.SetFilterText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.SetFilterText.Value">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.SetFound">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.SetFound.Value">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.SetFieldValues">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.SetFieldValues.fieldname">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.SetFieldValues.Value">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.SetModified">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.SetModified.Value">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.SetName">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.SetName.Value">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.SetOnFilterRecord">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.SetOnFilterRecord.Value">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.SetRecNo">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.SetRecNo.Value">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.SetState">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.SetState.Value">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDataSet.SetTempState">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.SetTempState.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.SetTempState.Value">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDataSet.Tempbuffer">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.Tempbuffer.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.UpdateIndexDefs">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TDataSet.ActiveRecord">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TDataSet.CurrentRecord">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TDataSet.BlobFieldCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TDataSet.BookmarkSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TDataSet.Buffers">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.Buffers.Index">
        <short/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TDataSet.BufferCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TDataSet.CalcBuffer">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TDataSet.CalcFieldsSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TDataSet.InternalCalcFields">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TDataSet.Constraints">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDataSet.AllocRecordBuffer">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.AllocRecordBuffer.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.FreeRecordBuffer">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.FreeRecordBuffer.Buffer">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.GetBookmarkData">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.GetBookmarkData.Buffer">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.GetBookmarkData.Data">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDataSet.GetBookmarkFlag">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.GetBookmarkFlag.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.GetBookmarkFlag.Buffer">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDataSet.GetDataSource">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.GetDataSource.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDataSet.GetRecord">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.GetRecord.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.GetRecord.Buffer">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.GetRecord.GetMode">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.GetRecord.DoCheck">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDataSet.GetRecordSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.GetRecordSize.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.InternalAddRecord">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.InternalAddRecord.Buffer">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.InternalAddRecord.AAppend">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.InternalClose">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.InternalDelete">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.InternalFirst">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.InternalGotoBookmark">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.InternalGotoBookmark.ABookmark">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.InternalHandleException">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.InternalInitFieldDefs">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.InternalInitRecord">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.InternalInitRecord.Buffer">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.InternalLast">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.InternalOpen">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.InternalPost">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.InternalSetToRecord">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.InternalSetToRecord.Buffer">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDataSet.IsCursorOpen">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.IsCursorOpen.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.SetBookmarkFlag">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.SetBookmarkFlag.Buffer">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.SetBookmarkFlag.Value">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.SetBookmarkData">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.SetBookmarkData.Buffer">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.SetBookmarkData.Data">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSet.SetUniDirectional">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.SetUniDirectional.Value">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TDataSet.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.Create.AOwner">
        <short/>
      </element>
      <!-- destructor Visibility: public -->
      <element name="TDataSet.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TDataSet.ActiveBuffer">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.ActiveBuffer.Result">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TDataSet.GetFieldData">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.GetFieldData.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.GetFieldData.Field">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.GetFieldData.Buffer">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.GetFieldData.NativeFormat">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDataSet.SetFieldData">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.SetFieldData.Field">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.SetFieldData.Buffer">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.SetFieldData.NativeFormat">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDataSet.Append">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDataSet.AppendRecord">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.AppendRecord.Values">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TDataSet.BookmarkValid">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.BookmarkValid.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.BookmarkValid.ABookmark">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDataSet.Cancel">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDataSet.CheckBrowseMode">
        <short>Sends a deCheckBrowseMode event and calls post if the state is dsEdit or dsInsert</short>
        <descr>CheckBrowseMode is usually called by TDataset internals before any changes to the activerecord.

First CheckbrowseMode sends a dsCheckBrowseMode event. Thereafter if state is dsInsert or dsEdit then an deUpdateRecord event is send and Post is called.

CheckbrowseMode raises an EDatabase exception if the dataset isn't active.
</descr>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDataSet.ClearFields">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDataSet.Close">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TDataSet.ControlsDisabled">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.ControlsDisabled.Result">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TDataSet.CompareBookmarks">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.CompareBookmarks.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.CompareBookmarks.Bookmark1">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.CompareBookmarks.Bookmark2">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TDataSet.CreateBlobStream">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.CreateBlobStream.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.CreateBlobStream.Field">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.CreateBlobStream.Mode">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDataSet.CursorPosChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDataSet.DataConvert">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.DataConvert.aField">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.DataConvert.aSource">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.DataConvert.aDest">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.DataConvert.aToNative">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDataSet.Delete">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDataSet.DisableControls">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDataSet.Edit">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDataSet.EnableControls">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TDataSet.FieldByName">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.FieldByName.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.FieldByName.FieldName">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TDataSet.FindField">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.FindField.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.FindField.FieldName">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TDataSet.FindFirst">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.FindFirst.Result">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TDataSet.FindLast">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.FindLast.Result">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TDataSet.FindNext">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.FindNext.Result">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TDataSet.FindPrior">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.FindPrior.Result">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDataSet.First">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDataSet.FreeBookmark">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.FreeBookmark.ABookmark">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TDataSet.GetBookmark">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.GetBookmark.Result">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TDataSet.GetCurrentRecord">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.GetCurrentRecord.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.GetCurrentRecord.Buffer">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDataSet.GetFieldList">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.GetFieldList.List">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.GetFieldList.FieldNames">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDataSet.GetFieldNames">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.GetFieldNames.List">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDataSet.GotoBookmark">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.GotoBookmark.ABookmark">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDataSet.Insert">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDataSet.InsertRecord">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.InsertRecord.Values">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TDataSet.IsEmpty">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.IsEmpty.Result">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TDataSet.IsLinkedTo">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.IsLinkedTo.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.IsLinkedTo.ADataSource">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TDataSet.IsSequenced">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.IsSequenced.Result">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDataSet.Last">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TDataSet.Locate">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.Locate.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.Locate.keyfields">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.Locate.keyvalues">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.Locate.options">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TDataSet.Lookup">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.Lookup.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.Lookup.KeyFields">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.Lookup.KeyValues">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.Lookup.ResultFields">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TDataSet.MoveBy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.MoveBy.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.MoveBy.Distance">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDataSet.Next">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDataSet.Open">
        <short>Sets active to true, effectively opens the TDataset</short>
        <descr>Use Open to make the TDataset Active.

TDataset.Open initialises the TDataset and brings the dataset in a browsable state.

Effectively the following happens:
- The BeforeOpen event is triggered.
- The descendents InternalOpen is called
- BOF is set to true
- RecalcBufListSize is called
- If the dataset is empty, EOF is set to true
- State is set to dsBrowse
- The AfterOpen event  is triggered
</descr>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDataSet.Post">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDataSet.Prior">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDataSet.Refresh">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDataSet.Resync">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.Resync.Mode">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDataSet.SetFields">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.SetFields.Values">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TDataSet.Translate">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.Translate.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.Translate.Src">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.Translate.Dest">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.Translate.ToOem">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDataSet.UpdateCursorPos">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDataSet.UpdateRecord">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TDataSet.UpdateStatus">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSet.UpdateStatus.Result">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.BOF">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.Bookmark">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.CanModify">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.DataSource">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.DefaultFields">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.EOF">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.FieldCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.FieldDefs">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.Found">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.Modified">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.IsUniDirectional">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.RecordCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.RecNo">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.RecordSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.State">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.Fields">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.FieldValues">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSet.FieldValues.fieldname">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.Filter">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.Filtered">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.FilterOptions">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.Active">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.AutoCalcFields">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.BeforeOpen">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.AfterOpen">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.BeforeClose">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.AfterClose">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.BeforeInsert">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.AfterInsert">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.BeforeEdit">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.AfterEdit">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.BeforePost">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.AfterPost">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.BeforeCancel">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.AfterCancel">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.BeforeDelete">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.AfterDelete">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.BeforeScroll">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.AfterScroll">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.BeforeRefresh">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.AfterRefresh">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.OnCalcFields">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.OnDeleteError">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.OnEditError">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.OnFilterRecord">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.OnNewRecord">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSet.OnPostError">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataLink.FFirstRecord">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataLink.FBufferCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataLink.FActive">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataLink.FDataSourceFixed">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataLink.FEditing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataLink.FReadOnly">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataLink.FUpdatingRecord">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataLink.FVisualControl">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataLink.FDataSource">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TDataLink.CalcFirstRecord">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataLink.CalcFirstRecord.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataLink.CalcFirstRecord.Index">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TDataLink.CalcRange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TDataLink.CheckActiveAndEditing">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TDataLink.GetDataset">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataLink.GetDataset.Result">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TDataLink.SetActive">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataLink.SetActive.AActive">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TDataLink.SetDataSource">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataLink.SetDataSource.Value">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TDataLink.SetReadOnly">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataLink.SetReadOnly.Value">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataLink.ActiveChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataLink.CheckBrowseMode">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataLink.DataEvent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataLink.DataEvent.Event">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataLink.DataEvent.Info">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataLink.DataSetChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataLink.DataSetScrolled">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataLink.DataSetScrolled.Distance">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataLink.EditingChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataLink.FocusControl">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataLink.FocusControl.Field">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDataLink.GetActiveRecord">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataLink.GetActiveRecord.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDataLink.GetBOF">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataLink.GetBOF.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDataLink.GetBufferCount">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataLink.GetBufferCount.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDataLink.GetEOF">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataLink.GetEOF.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDataLink.GetRecordCount">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataLink.GetRecordCount.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataLink.LayoutChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDataLink.MoveBy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataLink.MoveBy.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataLink.MoveBy.Distance">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataLink.RecordChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataLink.RecordChanged.Field">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataLink.SetActiveRecord">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataLink.SetActiveRecord.Value">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataLink.SetBufferCount">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataLink.SetBufferCount.Value">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataLink.UpdateData">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TDataLink.VisualControl">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TDataLink.FirstRecord">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TDataLink.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- destructor Visibility: public -->
      <element name="TDataLink.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TDataLink.Edit">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataLink.Edit.Result">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDataLink.UpdateRecord">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataLink.Active">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataLink.ActiveRecord">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataLink.BOF">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataLink.BufferCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataLink.DataSet">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataLink.DataSource">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataLink.DataSourceFixed">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataLink.Editing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataLink.Eof">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataLink.ReadOnly">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataLink.RecordCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TDetailDataLink">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDetailDataLink.GetDetailDataSet">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDetailDataLink.GetDetailDataSet.Result">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDetailDataLink.DetailDataSet">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TMasterDataLink">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TMasterDataLink.FDetailDataSet">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TMasterDataLink.FFieldNames">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TMasterDataLink.FFields">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TMasterDataLink.FOnMasterChange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TMasterDataLink.FOnMasterDisable">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TMasterDataLink.SetFieldNames">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMasterDataLink.SetFieldNames.Value">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TMasterDataLink.ActiveChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TMasterDataLink.CheckBrowseMode">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TMasterDataLink.GetDetailDataSet">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMasterDataLink.GetDetailDataSet.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TMasterDataLink.LayoutChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TMasterDataLink.RecordChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMasterDataLink.RecordChanged.Field">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TMasterDataLink.DoMasterDisable">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TMasterDataLink.DoMasterChange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TMasterDataLink.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMasterDataLink.Create.ADataSet">
        <short/>
      </element>
      <!-- destructor Visibility: public -->
      <element name="TMasterDataLink.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TMasterDataLink.FieldNames">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TMasterDataLink.Fields">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TMasterDataLink.OnMasterChange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TMasterDataLink.OnMasterDisable">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure type Visibility: default -->
      <element name="TDataChangeEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataChangeEvent.Sender">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataChangeEvent.Field">
        <short/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSource.FDataSet">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSource.FDataLinks">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSource.FEnabled">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSource.FAutoEdit">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSource.FState">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSource.FOnStateChange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSource.FOnDataChange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDataSource.FOnUpdateData">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TDataSource.DistributeEvent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSource.DistributeEvent.Event">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSource.DistributeEvent.Info">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TDataSource.RegisterDataLink">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSource.RegisterDataLink.DataLink">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TDataSource.ProcessEvent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSource.ProcessEvent.Event">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSource.ProcessEvent.Info">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TDataSource.SetDataSet">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSource.SetDataSet.ADataSet">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TDataSource.SetEnabled">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSource.SetEnabled.Value">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TDataSource.UnregisterDataLink">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSource.UnregisterDataLink.DataLink">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSource.DoDataChange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSource.DoDataChange.Info">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSource.DoStateChange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDataSource.DoUpdateData">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TDataSource.DataLinks">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TDataSource.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSource.Create.AOwner">
        <short/>
      </element>
      <!-- destructor Visibility: public -->
      <element name="TDataSource.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDataSource.Edit">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TDataSource.IsLinkedTo">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDataSource.IsLinkedTo.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDataSource.IsLinkedTo.ADataSet">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDataSource.State">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDataSource.AutoEdit">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDataSource.DataSet">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDataSource.Enabled">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDataSource.OnStateChange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDataSource.OnDataChange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDataSource.OnUpdateData">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- "class of" type Visibility: default -->
      <element name="TDBDatasetClass">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TDBDataset">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDBDataset.FDatabase">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDBDataset.FTransaction">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDBDataset.SetDatabase">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDBDataset.SetDatabase.Value">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDBDataset.SetTransaction">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDBDataset.SetTransaction.Value">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDBDataset.CheckDatabase">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- destructor Visibility: public -->
      <element name="TDBDataset.destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDBDataset.DataBase">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDBDataset.Transaction">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- "class of" type Visibility: default -->
      <element name="TDBTransactionClass">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDBTransaction.FActive">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDBTransaction.FDatabase">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDBTransaction.FDataSets">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDBTransaction.FOpenAfterRead">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TDBTransaction.GetDataSetCount">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDBTransaction.GetDataSetCount.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TDBTransaction.GetDataset">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDBTransaction.GetDataset.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDBTransaction.GetDataset.Index">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TDBTransaction.RegisterDataset">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDBTransaction.RegisterDataset.DS">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TDBTransaction.UnRegisterDataset">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDBTransaction.UnRegisterDataset.DS">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TDBTransaction.RemoveDataSets">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TDBTransaction.SetActive">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDBTransaction.SetActive.Value">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDBTransaction.SetDatabase">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDBTransaction.SetDatabase.Value">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDBTransaction.CloseTrans">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDBTransaction.openTrans">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDBTransaction.CheckDatabase">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDBTransaction.CheckActive">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDBTransaction.CheckInactive">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDBTransaction.EndTransaction">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDBTransaction.StartTransaction">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDBTransaction.InternalHandleException">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDBTransaction.Loaded">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TDBTransaction.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDBTransaction.Create.AOwner">
        <short/>
      </element>
      <!-- destructor Visibility: public -->
      <element name="TDBTransaction.destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDBTransaction.CloseDataSets">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDBTransaction.DataBase">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDBTransaction.Active">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure type Visibility: default -->
      <element name="TLoginEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TLoginEvent.Sender">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TLoginEvent.Username">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TLoginEvent.Password">
        <short/>
      </element>
      <!-- object Visibility: default -->
      <element name="TCustomConnection">
        <short>
          <var>TCustomConnection</var> - the base class for <var>TDatabase</var>
        </short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomConnection.FAfterConnect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomConnection.FAfterDisconnect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomConnection.FBeforeConnect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomConnection.FBeforeDisconnect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomConnection.FLoginPrompt">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomConnection.FOnLogin">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomConnection.FStreamedConnected">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomConnection.SetAfterConnect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomConnection.SetAfterConnect.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomConnection.SetAfterDisconnect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomConnection.SetAfterDisconnect.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomConnection.SetBeforeConnect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomConnection.SetBeforeConnect.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomConnection.SetBeforeDisconnect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomConnection.SetBeforeDisconnect.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomConnection.DoConnect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomConnection.DoDisconnect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomConnection.GetConnected">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomConnection.GetConnected.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomConnection.GetDataset">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomConnection.GetDataset.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomConnection.GetDataset.Index">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomConnection.GetDataSetCount">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomConnection.GetDataSetCount.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomConnection.InternalHandleException">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomConnection.Loaded">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomConnection.SetConnected">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomConnection.SetConnected.Value">
        <short/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomConnection.Streamedconnected">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomConnection.Close">
        <short>Close the connection to the database</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- destructor Visibility: public -->
      <element name="TCustomConnection.Destroy">
        <short>Destroy this instance of the component, and free its resources</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomConnection.Open">
        <short>Open the connection to the database</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomConnection.DataSetCount">
        <short>The number of data sets attached to this database connection</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomConnection.DataSets">
        <short>The list of the datasets connected to the database, referenced by their Index value</short>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomConnection.DataSets.Index">
        <short/>
      </element>
      <!-- property Visibility: published -->
      <element name="TCustomConnection.Connected">
        <short>Whether the connection to the database has been correctly made</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TCustomConnection.LoginPrompt">
        <short>Whether a login prompt should be issued before connection</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TCustomConnection.AfterConnect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TCustomConnection.AfterDisconnect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TCustomConnection.BeforeConnect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TCustomConnection.BeforeDisconnect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TCustomConnection.OnLogin">
        <short>The event handler for login to the database client</short>
        <descr/>
        <seealso/>
      </element>
      <!-- "class of" type Visibility: default -->
      <element name="TDatabaseClass">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDatabase.FConnected">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDatabase.FDataBaseName">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDatabase.FDataSets">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDatabase.FTransactions">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDatabase.FDirectory">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDatabase.FKeepConnection">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDatabase.FParams">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDatabase.FSQLBased">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDatabase.FOpenAfterRead">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TDatabase.GetTransactionCount">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDatabase.GetTransactionCount.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TDatabase.GetTransaction">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDatabase.GetTransaction.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDatabase.GetTransaction.Index">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TDatabase.RegisterDataset">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDatabase.RegisterDataset.DS">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TDatabase.RegisterTransaction">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDatabase.RegisterTransaction.TA">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TDatabase.UnRegisterDataset">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDatabase.UnRegisterDataset.DS">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TDatabase.UnRegisterTransaction">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDatabase.UnRegisterTransaction.TA">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TDatabase.RemoveDataSets">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TDatabase.RemoveTransactions">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDatabase.CheckConnected">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDatabase.CheckDisConnected">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDatabase.DoConnect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDatabase.DoDisconnect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDatabase.GetConnected">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDatabase.GetConnected.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDatabase.GetDataset">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDatabase.GetDataset.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDatabase.GetDataset.Index">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDatabase.GetDataSetCount">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDatabase.GetDataSetCount.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDatabase.DoInternalConnect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDatabase.DoInternalDisConnect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TDatabase.Create">
        <short>Creates a new instance of the component.</short>
        <descr>
          <var>Create</var> creates a new instance of a <var>TComponent</var> class.
If <var>AOwner</var> is not <var>Nil</var>, the new component attempts to 
insert itself in the list of owned components of the owner.
</descr>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDatabase.Create.AOwner">
        <short/>
      </element>
      <!-- destructor Visibility: public -->
      <element name="TDatabase.Destroy">
        <short>Destroys the instance of the component.</short>
        <descr>
          <var>Destroy</var> sends a <var>opRemove</var> notification to all components 
in the free-notification list. After that, all owned components are
destroyed by calling <link id="TComponent.DestroyComponents">DestroyComponents</link> 
(and hence removed from the list of owned components). When this
is done, the component removes itself from its owner's child component list.
After that, the parent's destroy method is called.
</descr>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDatabase.CloseDataSets">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDatabase.CloseTransactions">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDatabase.StartTransaction">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDatabase.EndTransaction">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDatabase.TransactionCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDatabase.Transactions">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDatabase.Transactions.Index">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDatabase.Directory">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDatabase.IsSQLBased">
        <short>
          <var>IsSQLBased </var>- True if the database uses <b>Structured Query Language</b>
        </short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDatabase.Connected">
        <short>True if database is correctly connected (all authentication correct, ports open etc)</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDatabase.DatabaseName">
        <short>The name of the database to which connection is required</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDatabase.KeepConnection">
        <short>True if we want to keep the database open once the query has been executed</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDatabase.Params">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- alias type Visibility: default -->
      <element name="TBlobData">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- array type Visibility: default -->
      <element name="TParamBinding">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TParamType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TParamType.ptUnknown">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TParamType.ptInput">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TParamType.ptOutput">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TParamType.ptInputOutput">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TParamType.ptResult">
        <short/>
      </element>
      <!-- set type Visibility: default -->
      <element name="TParamTypes">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TParamStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TParamStyle.psInterbase">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TParamStyle.psPostgreSQL">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TParamStyle.psSimulated">
        <short/>
      </element>
      <!-- object Visibility: default -->
      <element name="TParams">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TParam">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TParam.FNativeStr">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TParam.FValue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TParam.FPrecision">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TParam.FNumericScale">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TParam.FName">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TParam.FDataType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TParam.FBound">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TParam.FParamType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TParam.FSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TParam.GetDataSet">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TParam.GetDataSet.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TParam.IsParamStored">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TParam.IsParamStored.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TParam.AssignParam">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.AssignParam.Param">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TParam.AssignTo">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.AssignTo.Dest">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TParam.GetAsBoolean">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TParam.GetAsBoolean.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TParam.GetAsCurrency">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TParam.GetAsCurrency.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TParam.GetAsDateTime">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TParam.GetAsDateTime.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TParam.GetAsFloat">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TParam.GetAsFloat.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TParam.GetAsInteger">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TParam.GetAsInteger.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TParam.GetAsLargeInt">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TParam.GetAsLargeInt.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TParam.GetAsMemo">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TParam.GetAsMemo.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TParam.GetAsString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TParam.GetAsString.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TParam.GetAsVariant">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TParam.GetAsVariant.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TParam.GetDisplayName">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TParam.GetDisplayName.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TParam.GetIsNull">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TParam.GetIsNull.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TParam.IsEqual">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TParam.IsEqual.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.IsEqual.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TParam.SetAsBlob">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.SetAsBlob.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TParam.SetAsBoolean">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.SetAsBoolean.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TParam.SetAsCurrency">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.SetAsCurrency.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TParam.SetAsDate">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.SetAsDate.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TParam.SetAsDateTime">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.SetAsDateTime.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TParam.SetAsFloat">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.SetAsFloat.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TParam.SetAsInteger">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.SetAsInteger.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TParam.SetAsLargeInt">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.SetAsLargeInt.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TParam.SetAsMemo">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.SetAsMemo.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TParam.SetAsSmallInt">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.SetAsSmallInt.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TParam.SetAsString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.SetAsString.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TParam.SetAsTime">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.SetAsTime.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TParam.SetAsVariant">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.SetAsVariant.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TParam.SetAsWord">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.SetAsWord.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TParam.SetDataType">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.SetDataType.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TParam.SetText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.SetText.AValue">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TParam.GetAsWideString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TParam.GetAsWideString.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TParam.SetAsWideString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.SetAsWideString.aValue">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TParam.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.Create.ACollection">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.Create.AParams">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.Create.AParamType">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TParam.Assign">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.Assign.Source">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TParam.AssignField">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.AssignField.Field">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TParam.AssignToField">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.AssignToField.Field">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TParam.AssignFieldValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.AssignFieldValue.Field">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.AssignFieldValue.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TParam.AssignFromField">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.AssignFromField.Field">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TParam.Clear">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TParam.GetData">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.GetData.Buffer">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TParam.GetDataSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TParam.GetDataSize.Result">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TParam.LoadFromFile">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.LoadFromFile.FileName">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.LoadFromFile.BlobType">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TParam.LoadFromStream">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.LoadFromStream.Stream">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.LoadFromStream.BlobType">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TParam.SetBlobData">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.SetBlobData.Buffer">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.SetBlobData.ASize">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TParam.SetData">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParam.SetData.Buffer">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TParam.AsBlob">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TParam.AsBoolean">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TParam.AsCurrency">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TParam.AsDate">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TParam.AsDateTime">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TParam.AsFloat">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TParam.AsInteger">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TParam.AsLargeInt">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TParam.AsMemo">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TParam.AsSmallInt">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TParam.AsString">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TParam.AsTime">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TParam.AsWord">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TParam.Bound">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TParam.Dataset">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TParam.IsNull">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TParam.NativeStr">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TParam.Text">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TParam.Value">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TParam.AsWideString">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TParam.DataType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TParam.Name">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TParam.NumericScale">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TParam.ParamType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TParam.Precision">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TParam.Size">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TParams.FOwner">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TParams.GetItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TParams.GetItem.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParams.GetItem.Index">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TParams.GetParamValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TParams.GetParamValue.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParams.GetParamValue.ParamName">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TParams.SetItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParams.SetItem.Index">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParams.SetItem.Value">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TParams.SetParamValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParams.SetParamValue.ParamName">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParams.SetParamValue.Value">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TParams.AssignTo">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParams.AssignTo.Dest">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TParams.GetDataSet">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TParams.GetDataSet.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TParams.GetOwner">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TParams.GetOwner.Result">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TParams.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParams.Create.AOwner">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TParams.AddParam">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParams.AddParam.Value">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TParams.AssignValues">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParams.AssignValues.Value">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TParams.CreateParam">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TParams.CreateParam.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParams.CreateParam.FldType">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParams.CreateParam.ParamName">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParams.CreateParam.ParamType">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TParams.FindParam">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TParams.FindParam.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParams.FindParam.Value">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TParams.GetParamList">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParams.GetParamList.List">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParams.GetParamList.ParamNames">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TParams.IsEqual">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TParams.IsEqual.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParams.IsEqual.Value">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TParams.ParamByName">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TParams.ParamByName.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParams.ParamByName.Value">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TParams.ParseSQL">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TParams.ParseSQL.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParams.ParseSQL.SQL">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParams.ParseSQL.DoCreate">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParams.ParseSQL.EscapeSlash">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParams.ParseSQL.EscapeRepeat">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParams.ParseSQL.ParameterStyle">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParams.ParseSQL.ParamBinding">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParams.ParseSQL.ReplaceString">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TParams.RemoveParam">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParams.RemoveParam.Value">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TParams.CopyParamValuesFromDataset">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParams.CopyParamValuesFromDataset.ADataset">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParams.CopyParamValuesFromDataset.CopyBound">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TParams.Dataset">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TParams.Items">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParams.Items.Index">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TParams.ParamValues">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TParams.ParamValues.ParamName">
        <short/>
      </element>
      <!-- object Visibility: default -->
      <element name="TMasterParamsDataLink">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TMasterParamsDataLink.FParams">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TMasterParamsDataLink.SetParams">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMasterParamsDataLink.SetParams.AVAlue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TMasterParamsDataLink.DoMasterDisable">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TMasterParamsDataLink.DoMasterChange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TMasterParamsDataLink.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMasterParamsDataLink.Create.ADataSet">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TMasterParamsDataLink.RefreshParamNames">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TMasterParamsDataLink.CopyParamsFromMaster">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMasterParamsDataLink.CopyParamsFromMaster.CopyBound">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TMasterParamsDataLink.Params">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="FieldTypetoVariantMap">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="Fieldtypenames">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="DefaultFieldClasses">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="dsEditModes">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="dsWriteModes">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: default -->
      <element name="DatabaseError">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="DatabaseError.Msg">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="DatabaseError.Comp">
        <short/>
      </element>
      <!-- procedure Visibility: default -->
      <element name="DatabaseErrorFmt">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="DatabaseErrorFmt.Fmt">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="DatabaseErrorFmt.Args">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="DatabaseErrorFmt.Comp">
        <short/>
      </element>
      <!-- function Visibility: default -->
      <element name="ExtractFieldName">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="ExtractFieldName.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="ExtractFieldName.Fields">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="ExtractFieldName.Pos">
        <short/>
      </element>
      <!-- function Visibility: default -->
      <element name="DateTimeRecToDateTime">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="DateTimeRecToDateTime.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="DateTimeRecToDateTime.DT">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="DateTimeRecToDateTime.Data">
        <short/>
      </element>
      <!-- function Visibility: default -->
      <element name="DateTimeToDateTimeRec">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="DateTimeToDateTimeRec.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="DateTimeToDateTimeRec.DT">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="DateTimeToDateTimeRec.Data">
        <short/>
      </element>
      <!-- procedure Visibility: default -->
      <element name="DisposeMem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="DisposeMem.Buffer">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="DisposeMem.Size">
        <short/>
      </element>
      <!-- function Visibility: default -->
      <element name="BuffersEqual">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="BuffersEqual.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="BuffersEqual.Buf1">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="BuffersEqual.Buf2">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="BuffersEqual.Size">
        <short/>
      </element>
      <!-- function Visibility: default -->
      <element name="SkipComments">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="SkipComments.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="SkipComments.p">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="SkipComments.EscapeSlash">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="SkipComments.EscapeRepeat">
        <short/>
      </element>
    </module>
    <!-- db -->
  </package>
</fpdoc-descriptions>
