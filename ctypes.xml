<?xml version="1.0" encoding="ISO-8859-1"?>
<fpdoc-descriptions>
<package name="rtl">

<!--
  ====================================================================
    ctypes
  ====================================================================
-->

<module name="ctypes">
<short>Common C type definitions</short>
<descr>
<p>
The <file>ctypes</file> unit contains the definitions of commonly found C types.
It can be used when interfaces to C libraries need to be defined. The types
here are correct on all platforms, 32 or 64 bit. 
</p>
<p>
The main advantage of using this file is to make sure that all C header 
import units use the same definitions for basic C types.
</p>
<p>
The <file>h2pas</file> program can include the <file>ctypes</file> unit
automatically in the units it generates. The <var>-C</var> command-line
switch can be used for this.
</p>
</descr>

<!-- alias type Visibility: default -->
<element name="cint8">
<short>8-bit signed integer</short>
</element>

<!-- alias type Visibility: default -->
<element name="pcint8">
<short>Pointer to <link id="#rtl.ctypes.cint8">cint8</link> type.</short>
</element>

<!-- alias type Visibility: default -->
<element name="cuint8">
<short>8-bit unsigned integer</short>
</element>

<!-- alias type Visibility: default -->
<element name="pcuint8">
<short>Pointer to <link id="#rtl.ctypes.cuint8">cuint8</link> type.</short>
</element>

<!-- alias type Visibility: default -->
<element name="cchar">
<short>C character type (No signedness specification, 8 bit integer)</short>
</element>

<!-- alias type Visibility: default -->
<element name="pcchar">
<short>Pointer to <link id="#rtl.ctypes.cchar">cchar</link> type.</short>
</element>

<!-- alias type Visibility: default -->
<element name="cschar">
<short>C signed character type (8 bit signed integer)</short>
</element>

<!-- alias type Visibility: default -->
<element name="pcschar">
<short>Pointer to <link id="#rtl.ctypes.cschar">cschar</link> type.</short>
</element>

<!-- alias type Visibility: default -->
<element name="cuchar">
<short>C unsigned character type (8 bit unsigned integer).</short>
</element>

<!-- alias type Visibility: default -->
<element name="pcuchar">
<short>Pointer to <link id="#rtl.ctypes.cuchar">cuchar</link> type.</short>
</element>

<!-- alias type Visibility: default -->
<element name="cint16">
<short>16-bit signed integer.</short>
</element>

<!-- alias type Visibility: default -->
<element name="pcint16">
<short>Pointer to <link id="#rtl.ctypes.cint16">cint16</link> type.</short>
</element>

<!-- alias type Visibility: default -->
<element name="cuint16">
<short>16-bit unsigned integer.</short>
</element>

<!-- alias type Visibility: default -->
<element name="pcuint16">
<short>Pointer to <link id="#rtl.ctypes.cuint16">cuint16</link> type.</short>
</element>

<!-- alias type Visibility: default -->
<element name="cshort">
<short>Short integer (16 bit)</short>
</element>

<!-- alias type Visibility: default -->
<element name="pcshort">
<short>Pointer to <link id="#rtl.ctypes.cshort">cshort</link> type.</short>
</element>

<!-- alias type Visibility: default -->
<element name="csshort">
<short>Short signed integer (16 bit)</short>
</element>

<!-- alias type Visibility: default -->
<element name="pcsshort">
<short>Pointer to <link id="#rtl.ctypes.csshort">csshort</link> type.</short>
</element>

<!-- alias type Visibility: default -->
<element name="cushort">
<short>Short unsigned integer (16 bit)</short>
</element>

<!-- alias type Visibility: default -->
<element name="pcushort">
<short>Pointer to <link id="#rtl.ctypes.cushort">cushort</link> type.</short>
</element>

<!-- alias type Visibility: default -->
<element name="cint32">
<short>32-bit signed integer (commonly: int)</short>
</element>

<!-- alias type Visibility: default -->
<element name="pcint32">
<short>Pointer to <link id="#rtl.ctypes.cint32">cint32</link> type.</short>
</element>

<!-- alias type Visibility: default -->
<element name="cuint32">
<short>32-bit unsigned integer</short>
</element>

<!-- alias type Visibility: default -->
<element name="pcuint32">
<short>Pointer to <link id="#rtl.ctypes.cuint32">cuint32</link> type.</short>
</element>

<!-- alias type Visibility: default -->
<element name="cint">
<short>C integer (commonly 32 bit)</short>
</element>

<!-- alias type Visibility: default -->
<element name="pcint">
<short>Pointer to <link id="#rtl.ctypes.cint">cint</link> type.</short>
</element>

<!-- alias type Visibility: default -->
<element name="csint">
<short>Signed integer (commonly 32 bit)</short>
</element>

<!-- alias type Visibility: default -->
<element name="pcsint">
<short>Pointer to <link id="#rtl.ctypes.csint">csint</link> type.</short>
</element>

<!-- alias type Visibility: default -->
<element name="cuint">
<short>Unsigned integer (commonly 32 bit)</short>
</element>

<!-- alias type Visibility: default -->
<element name="pcuint">
<short>Pointer to <link id="#rtl.ctypes.cuint">cuint</link> type.</short>
</element>

<!-- alias type Visibility: default -->
<element name="csigned">
<short>Signed integer (commonly 32 bit)</short>
</element>

<!-- alias type Visibility: default -->
<element name="pcsigned">
<short>Pointer to <link id="#rtl.ctypes.csigned">csigned</link> type.</short>
</element>

<!-- alias type Visibility: default -->
<element name="cunsigned">
<short>Unsigned integer (commonly 32 bit)</short>
</element>

<!-- alias type Visibility: default -->
<element name="pcunsigned">
<short>Pointer to <link id="#rtl.ctypes.cunsigned">cunsigned</link> type.</short>
</element>

<!-- alias type Visibility: default -->
<element name="cint64">
<short>64-bit integer</short>
</element>

<!-- alias type Visibility: default -->
<element name="pcint64">
<short>Pointer to <link id="#rtl.ctypes.cint64">cint64</link> type.</short>
</element>

<!-- alias type Visibility: default -->
<element name="cuint64">
<short>Unsigned 64-bit integer</short>
</element>

<!-- alias type Visibility: default -->
<element name="pcuint64">
<short>Pointer to <link id="#rtl.ctypes.cuint64">cuint64</link> type.</short>
</element>

<!-- alias type Visibility: default -->
<element name="clonglong">
<short>Long (64-bit) integer</short>
</element>

<!-- alias type Visibility: default -->
<element name="pclonglong">
<short>Pointer to <link id="#rtl.ctypes.clonglong">clonglong</link> type.</short>
</element>

<!-- alias type Visibility: default -->
<element name="cslonglong">
<short>Signed long (64-bit) integer</short>
</element>

<!-- alias type Visibility: default -->
<element name="pcslonglong">
<short>Pointer to <link id="#rtl.ctypes.cslonglong">cslonglong</link> type.</short>
</element>

<!-- alias type Visibility: default -->
<element name="culonglong">
<short>Unsigned long (64-bit) integer</short>
</element>

<!-- alias type Visibility: default -->
<element name="pculonglong">
<short>Pointer to <link id="#rtl.ctypes.culonglong">culonglong</link> type.</short>
</element>

<!-- alias type Visibility: default -->
<element name="cbool">
<short>C boolean (longbool)</short>
</element>

<!-- alias type Visibility: default -->
<element name="pcbool">
<short>Pointer to <link id="#rtl.ctypes.cbool">cbool</link> type.</short>
</element>

<!-- alias type Visibility: default -->
<element name="clong">
<short>long integer (32/64 bit, depending on CPU register size)</short>
</element>

<!-- alias type Visibility: default -->
<element name="pclong">
<short>Pointer to <link id="#rtl.ctypes.clong">clong</link> type.</short>
</element>

<!-- alias type Visibility: default -->
<element name="cslong">
<short>Signed long integer (32/64 bit, depending on CPU register size)</short>
</element>

<!-- alias type Visibility: default -->
<element name="pcslong">
<short>Pointer to <link id="#rtl.ctypes.cslong">cslong</link> type.</short>
</element>

<!-- alias type Visibility: default -->
<element name="culong">
<short>Unsigned long integer (32/64 bit, depending on CPU register size)</short>
</element>

<!-- alias type Visibility: default -->
<element name="pculong">
<short>Pointer to <link id="#rtl.ctypes.culong">culong</link> type.</short>
</element>

<!-- alias type Visibility: default -->
<element name="cfloat">
<short>Single precision floating point type (single)</short>
</element>

<!-- alias type Visibility: default -->
<element name="pcfloat">
<short>Pointer to <link id="#rtl.ctypes.cfloat">cfloat</link> type.</short>
</element>

<!-- alias type Visibility: default -->
<element name="cdouble">
<short>Double precision floating point type (double)</short>
</element>

<!-- alias type Visibility: default -->
<element name="pcdouble">
<short>Pointer to <link id="#rtl.ctypes.cdouble">cdouble</link> type.</short>
</element>

<!-- array type Visibility: default -->
<element name="clongdouble">
<short>Long precision floating point type (extended/double, depending on CPU)</short>
</element>

<!-- pointer type Visibility: default -->
<element name="Pclongdouble">
<short>Pointer to  <link id="#rtl.ctypes.clongdouble">clongdouble</link> type.</short>
</element>

<!-- function Visibility: default -->
<element name="operator :=(clongdouble): double">
<short>Override assignment operator for <link id="#rtl.ctypes.clongdouble">clongdouble</link> type.</short>
</element>

<!-- function Visibility: default -->
<element name="operator :=(double): clongdouble">
<short>Override assignment operator for <link id="#rtl.ctypes.clongdouble">clongdouble</link> type.</short>
</element>

<!-- alias type Visibility: default -->
<element name="csize_t">
<short>Generic type to contain a size of all kinds of structures</short>
</element>

<!-- alias type Visibility: default -->
<element name="pcsize_t">
<short>Pointer to generic size type</short>
</element>

<!-- alias type Visibility: default -->
<element name="coff_t">
<short>Generic type to indicate offset</short>
</element>

</module> <!-- ctypes -->

</package>
</fpdoc-descriptions>
